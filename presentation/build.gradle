apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

apply from: "$rootProject.projectDir/keystore.gradle"

// Android Configs
android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId 'com.jemshit.challenge'
        minSdkVersion 16
        targetSdkVersion 27
        versionName "1.0.0"
        versionCode 1

        manifestPlaceholders = [
                manifestApplicationId: "${applicationId}"
        ]

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keystore.KEYSTORE_RELEASE_FILE)
            storePassword keystore.KEYSTORE_RELEASE_PASSWORD
            keyAlias keystore.KEYSTORE_RELEASE_ALIAS
            keyPassword keystore.KEYSTORE_RELEASE_PASSWORD
        }
        debug {
            storeFile file(keystore.KEYSTORE_DEBUG_FILE)
            storePassword keystore.KEYSTORE_DEBUG_PASSWORD
            keyAlias keystore.KEYSTORE_DEBUG_ALIAS
            keyPassword keystore.KEYSTORE_DEBUG_PASSWORD
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro',
                    "$rootProject.projectDir/domain/proguard-rules.pro"

            testCoverageEnabled false
            multiDexEnabled false

            //For @string in xml files
            resValue 'string', 'application_id', android.defaultConfig.applicationId
        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            testCoverageEnabled true
            multiDexEnabled false

            //For @string in xml files
            resValue 'string', 'application_id', android.defaultConfig.applicationId + applicationIdSuffix
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
}

jacoco {
    reportsDir = file("$project.rootDir/outputs/reports/jacoco-$project.name")
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}

check.dependsOn jacocoTestReport

// Dependencies
dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    implementation project(':domain')
    implementation project(':data')

    //Test Libraries
    testImplementation presentationTestDependencies.junit
    testImplementation presentationTestDependencies.mockito_core

    androidTestImplementation presentationTestDependencies.mockito_android
    androidTestImplementation(presentationTestDependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Other Libraries
    implementation presentationDependencies.support_appcompat_v7
    implementation presentationDependencies.support_v4
    implementation presentationDependencies.support_design
    implementation presentationDependencies.support_recyclerview
    implementation presentationDependencies.rxjava2
    implementation presentationDependencies.rxandroid2
    implementation presentationDependencies.dagger
    implementation presentationDependencies.dagger_android
    implementation presentationDependencies.butterknife
    implementation presentationDependencies.material_dimen
    implementation presentationDependencies.glide
    implementation presentationDependencies.materialish_progress

    annotationProcessor presentationDependencies.dagger_apt
    annotationProcessor presentationDependencies.dagger_android_apt
    annotationProcessor presentationDependencies.butterknife_apt
}
